[
    {
        "id": "1b1008dd0e440fd5",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5d34b46cb790a2a9",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0431b23aaba23e27",
        "type": "http in",
        "z": "1b1008dd0e440fd5",
        "name": "Home Page",
        "url": "/home",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "eb049e1b8969f5c3"
            ]
        ]
    },
    {
        "id": "eb049e1b8969f5c3",
        "type": "template",
        "z": "1b1008dd0e440fd5",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\nbody {\n  margin: 0;\n  min-width: 250px;\n}\n\n/* Include the padding and border in an element's total width and height */\n* {\n  box-sizing: border-box;\n}\n\n/* Remove margins and padding from the list */\nul {\n  margin: 0;\n  padding: 0;\n}\n\n/* Style the list items */\nul li {\n  cursor: pointer;\n  position: relative;\n  padding: 12px 8px 12px 40px;\n  list-style-type: none;\n  background: #eee;\n  font-size: 18px;\n  transition: 0.2s;\n  \n  /* make the list items unselectable */\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n/* Set all odd list items to a different color (zebra-stripes) */\nul li:nth-child(odd) {\n  background: #f9f9f9;\n}\n\n/* Darker background-color on hover */\nul li:hover {\n  background: #ddd;\n}\n\n/* When clicked on, add a background color and strike out text */\nul li.checked {\n  background: #888;\n  color: #fff;\n  text-decoration: line-through;\n}\n\n/* Add a \"checked\" mark when clicked on */\nul li.checked::before {\n  content: '';\n  position: absolute;\n  border-color: #fff;\n  border-style: solid;\n  border-width: 0 2px 2px 0;\n  top: 10px;\n  left: 16px;\n  transform: rotate(45deg);\n  height: 15px;\n  width: 7px;\n}\n\n/* Style the close button */\n.close {\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 12px 16px 12px 16px;\n}\n\n.close:hover {\n  background-color: #f44336;\n  color: white;\n}\n\n/* Style the header */\n.header {\n  background-color: #f44336;\n  padding: 30px 40px;\n  color: white;\n  text-align: center;\n}\n\n/* Clear floats after the header */\n.header:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n/* Style the input */\ninput {\n  margin: 0;\n  border: none;\n  border-radius: 0;\n  width: 75%;\n  padding: 10px;\n  float: left;\n  font-size: 16px;\n}\n\n/* Style the \"Add\" button */\n.addBtn {\n  padding: 10px;\n  width: 25%;\n  background: #d9d9d9;\n  color: #555;\n  float: left;\n  text-align: center;\n  font-size: 16px;\n  cursor: pointer;\n  transition: 0.3s;\n  border-radius: 0;\n}\n\n.addBtn:hover {\n  background-color: #bbb;\n}\n</style>\n<title>Node-Red Webpage</title>\n</head>\n<body>\n    \n    <div id=\"myDIV\" class=\"header\">\n  <h1 style=\"text-align:center\">Plan your Day.... !!!!!</h1>\n  <input type=\"text\" id=\"myInput\" placeholder=\"Add new Task\">\n  <span onclick=\"newElement()\" class=\"addBtn\">Add</span>\n  </div>\n<h2>Current Tasks in your queue:</h2>\n<ul id=\"myUL\">\n  <li>Write codebase</li>\n  <li>Build Docker file</li>\n  <li>Create Kuberenetes files</li>\n  <li>Skaffold Config</li>\n</ul>\n\n<script>\n// Create a \"close\" button and append it to each list item\nvar myNodelist = document.getElementsByTagName(\"LI\");\nvar i;\nfor (i = 0; i < myNodelist.length; i++) {\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  myNodelist[i].appendChild(span);\n}\n\n// Click on a close button to hide the current list item\nvar close = document.getElementsByClassName(\"close\");\nvar i;\nfor (i = 0; i < close.length; i++) {\n  close[i].onclick = function() {\n    var div = this.parentElement;\n    div.style.display = \"none\";\n  }\n}\n\n// Add a \"checked\" symbol when clicking on a list item\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function(ev) {\n  if (ev.target.tagName === 'LI') {\n    ev.target.classList.toggle('checked');\n  }\n}, false);\n\n// Create a new list item when clicking on the \"Add\" button\nfunction newElement() {\n  var li = document.createElement(\"li\");\n  var inputValue = document.getElementById(\"myInput\").value;\n  var t = document.createTextNode(inputValue);\n  li.appendChild(t);\n  if (inputValue === '') {\n    alert(\"You must write something!\");\n  } else {\n    document.getElementById(\"myUL\").appendChild(li);\n  }\n  document.getElementById(\"myInput\").value = \"\";\n\n  var span = document.createElement(\"SPAN\");\n  var txt = document.createTextNode(\"\\u00D7\");\n  span.className = \"close\";\n  span.appendChild(txt);\n  li.appendChild(span);\n\n  for (i = 0; i < close.length; i++) {\n    close[i].onclick = function() {\n      var div = this.parentElement;\n      div.style.display = \"none\";\n    }\n  }\n}\n</script>\n\n</body>\n</html>\n",
        "output": "str",
        "x": 390,
        "y": 180,
        "wires": [
            [
                "288d24b854e7ef72"
            ]
        ]
    },
    {
        "id": "288d24b854e7ef72",
        "type": "http response",
        "z": "1b1008dd0e440fd5",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/html"
        },
        "x": 590,
        "y": 240,
        "wires": []
    },
    {
        "id": "4b5554ce198f9f7c",
        "type": "http in",
        "z": "5d34b46cb790a2a9",
        "name": "Ping",
        "url": "/math",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "b5ba02e4d1939643"
            ]
        ]
    },
    {
        "id": "824cc0dc9bfd655b",
        "type": "http response",
        "z": "5d34b46cb790a2a9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 520,
        "y": 180,
        "wires": []
    },
    {
        "id": "b5ba02e4d1939643",
        "type": "template",
        "z": "5d34b46cb790a2a9",
        "name": "Fibonacci",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "\n<!DOCTYPE html>\n<html>\n    <title>MathFun</title>\n    <style>\n  h1 {color:red;}\n  p {color:blue;}\n  body {background-color:powderblue;}\n</style>\n<body>\n\n<h1 >Fibonacci Generator </h1>\n\n<input type=\"number\" id=\"myNumber\" value=\"0\">\n\n<p>Enter a number to generate Fibonacci array.</p>\n\n<button onclick=\"myFunction()\">Try it</button>\n\n\n<p id=\"demo\"></p>\n<script>\nfunction myFunction() {\n    var n = document.getElementById(\"myNumber\").value;\n    document.getElementById(\"demo\").innerHTML = fibonacciGenerator (n);\n}\n\nvar sequence = [0]; \nvar previousNumber = 1;\nvar presentNumber = 0;\nvar sum = 0;\n \nfunction fibonacciGenerator (n) {\n  \n    while (sequence.length < n) {\n     sum = previousNumber + presentNumber;\n     previousNumber = presentNumber;\n     presentNumber = sum;\n     sequence.push(sum);\n     \n    }\n    return (sequence);\n}\n</script>\n\n</body>\n</html>",
        "output": "str",
        "x": 300,
        "y": 140,
        "wires": [
            [
                "824cc0dc9bfd655b"
            ]
        ]
    }
]